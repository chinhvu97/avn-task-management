{
  "permissions": {
    "allow": [
      "mcp__serena__list_dir",
      "Bash(mkdir:*)",
      "Bash(npm install:*)",
      "Bash(npm run type-check:*)",
      "Bash(tree:*)",
      "Bash(npm run build:*)",
      "Bash(node -e \"\nconst { wsTemplates } = require(''../shared-data/src/templates/wsTemplates.ts'');\nconsole.log(''Total WS templates:'', wsTemplates.length);\nconsole.log(''\\nTemplates with event field:'');\nwsTemplates.forEach(t => {\n  if (t.event) console.log(''  -'', t.code, '':'', t.title, ''-> event:'', t.event);\n});\nconsole.log(''\\nTemplates WITHOUT event field:'');\nwsTemplates.forEach(t => {\n  if (!t.event) console.log(''  -'', t.code, '':'', t.title, ''-> NO EVENT FIELD'');\n});\n\")",
      "mcp__serena__find_file",
      "mcp__serena__search_for_pattern",
      "mcp__serena__activate_project",
      "Bash(npm run dev:*)",
      "Bash(git checkout:*)",
      "mcp__serena__get_symbols_overview",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(VERCEL=true npm run build:*)",
      "Bash(git remote add:*)",
      "Bash(git remote set-url:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(npm run build:all:*)",
      "Bash(npm run build:hq:*)",
      "mcp__serena__initial_instructions",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__list_memories",
      "mcp__serena__find_symbol",
      "Bash(cat:*)"
    ],
    "deny": [],
    "ask": []
  }
}
